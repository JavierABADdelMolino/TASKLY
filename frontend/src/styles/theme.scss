// 1. Tus variables antes de importar Bootstrap
@import './config/_variables';

// 2. Bootstrap base
@import 'bootstrap/scss/bootstrap';

// 3. Temas dinámicos (usando CSS vars)
@import './themes/_light';
@import './themes/_dark';

// Apply background and text colors based on CSS variables
body {
  background-color: var(--bs-body-bg);
  color: var(--bs-body-color);
}

footer {
  background-color: var(--bs-body-tertiary-bg);
  color: var(--bs-body-color);
}

// 4. Base o utilidades extra
@import './base/_reset';
@import './base/forms';

// 5. Componentes visuales

// 6. Estilo personalizado para switch de tema
.form-check.form-switch {
  padding: 0.25rem 0.5rem;
  background-color: var(--bs-body-tertiary-bg);
  border-radius: 1.5rem;
  width: 4rem;
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
}
.form-check.form-switch .form-check-input {
  width: 2rem;
  height: 1rem;
  margin: 0;
  background-color: #ccc;
  border-radius: 1rem;
  position: relative;
  transition: background-color 0.3s ease;
}
.form-check.form-switch .form-check-input:focus {
  box-shadow: none;
}
.form-check.form-switch .form-check-input:checked {
  background-color: var(--bs-primary);
}
.form-check.form-switch .form-check-input::before {
  content: '';
  position: absolute;
  top: 0.125rem;
  left: 0.125rem;
  width: 0.75rem;
  height: 0.75rem;
  background: #fff;
  border-radius: 50%;
  transition: transform 0.3s ease;
}
.form-check.form-switch .form-check-input:checked::before {
  transform: translateX(1.5rem);
}

// Custom theme toggle styling
.theme-toggle {
   width: 4rem;
   height: 2rem;
   background-color: var(--bs-body-tertiary-bg);
   border: 2px solid var(--bs-primary);
   border-radius: 1rem;
   cursor: pointer;
   transition: background-color 0.2s ease;
   margin: 0.25rem auto 0;
}
.theme-toggle:hover {
  background-color: var(--bs-hover-bg);
}
.theme-toggle-input {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}
/* Knob with icon */
.theme-toggle-label {
  position: relative;
  display: block;
  width: 100%;
  height: 100%;
  top: 0.15rem;
  left: 0.15rem;
  gap: 0.2rem;
  user-select: none;
}
.theme-icon {
  font-size: 1rem;
  color: var(--bs-body-color);
}
.theme-toggle-slider {
  /* larger knob with background and centered icon */
  position: absolute;
  width: 1.5rem;
  height: 1.5rem;
  top: 50%;
  left: 0.25rem;
  transform: translateY(-50%);
  background-color: var(--bs-primary);
  color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: left 0.3s ease;
  z-index: 1;
}
.theme-toggle-input:checked + .theme-toggle-label .theme-toggle-slider {
  left: calc(100% - 1.75rem);
}
/* Icon active state */
.theme-toggle-input:checked + .theme-toggle-label .theme-icon-sun {
  color: var(--bs-primary);
}
.theme-toggle-input:not(:checked) + .theme-toggle-label .theme-icon-moon {
  color: var(--bs-primary);
}

// Carousel controls en modo claro
.carousel-light-controls {
  .carousel-control-prev-icon,
  .carousel-control-next-icon {
    filter: brightness(0) !important;
  }
  .carousel-indicators {
    bottom: 15px;
  }
  .carousel-indicators button {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: var(--bs-body-color) !important;
    opacity: 0.6;
  }
  .carousel-indicators .active {
    background-color: var(--bs-body-color) !important;
    opacity: 1;
  }
}

// Carousel indicators como líneas para claro y oscuro
.carousel-light-controls, .carousel-dark-controls {
  .carousel-indicators {
    display: flex;
    bottom: 15px;
    gap: 8px;
  }
  .carousel-indicators button {
    width: 30px;
    height: 4px;
    border-radius: 2px;
    margin: 0;
    opacity: 0.5;
  }
}

.carousel-light-controls {
  .carousel-indicators button {
    background-color: var(--bs-body-color) !important;
  }
  .carousel-indicators .active {
    background-color: var(--bs-body-color) !important;
    opacity: 1;
  }
}

.carousel-dark-controls {
  .carousel-indicators button {
    background-color: var(--bs-white) !important;
  }
  .carousel-indicators .active {
    background-color: var(--bs-white) !important;
    opacity: 1;
  }
}

// Custom hover for task edit/delete buttons
.task-card .btn-link {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s ease, color 0.2s ease;
}
.task-card .btn-link:hover {
  background-color: var(--bs-body-tertiary-bg) !important;
  color: var(--bs-body-color) !important;
  border-radius: 0.25rem;
}

/* En Light Mode, el botón de eliminar (text-danger) no cambia fondo ni color al hover/focus/active */
[data-theme="light"] .task-card .btn-link.text-danger:hover,
[data-theme="light"] .task-card .btn-link.text-danger:focus,
[data-theme="light"] .task-card .btn-link.text-danger:active {
  background-color: transparent !important;
  color: var(--bs-danger) !important;
}

/* Igual para el botón eliminar columna */
[data-theme="light"] .column-card .btn-link.text-danger:hover,
[data-theme="light"] .column-card .btn-link.text-danger:focus,
[data-theme="light"] .column-card .btn-link.text-danger:active {
  background-color: transparent !important;
  color: var(--bs-danger) !important;
}

// Revert custom overrides: remove .modal.show.d-block rule
/* Revert .modal.show.d-block to Bootstrap defaults */
.modal.show.d-block {
  position: fixed !important;
}

// Light mode subtle contrast enhancements
[data-theme="light"] {
  /* Column and task cards */
  .column-card, .task-card {
    background-color: var(--bs-body-tertiary-bg) !important;
    border: 1px solid var(--bs-border-color) !important;
    box-shadow: 0 1px 2px rgba(0,0,0,0.05);
  }

  /* Navbar background separation */
  nav.navbar {
    background-color: var(--bs-body-tertiary-bg) !important;
    box-shadow: 0 1px 2px rgba(0,0,0,0.05);
  }

  /* Modal content subtle elevation */
  .modal-content {
    background-color: var(--bs-body-bg) !important;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    border: 1px solid var(--bs-border-color);
  }

  /* Dropdown menus */
  .dropdown-menu {
    background-color: var(--bs-body-tertiary-bg) !important;
    border: 1px solid var(--bs-border-color) !important;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  }

  /* Default primary accent stripe for tasks in light mode */
  .task-card {
    border-left: 4px solid var(--bs-primary) !important;
  }

  /* Restore status backgrounds overriding default light card background */
  .task-card.urgent {
    background-color: rgba(255, 193, 7, 0.1) !important;
    border-left: 4px solid var(--bs-warning) !important;
  }
  .task-card.overdue {
    background-color: rgba(220, 53, 69, 0.1) !important;
    border-left: 4px solid var(--bs-danger) !important;
  }
}

// Highlight tasks by due status
.task-card.today {
  border-left: 4px solid var(--bs-info) !important;
  background-color: rgba(13, 110, 253, 0.1);
}
.task-card.urgent {
  border-left: 4px solid var(--bs-warning) !important;
  background-color: rgba(255, 193, 7, 0.1);
}
.task-card.overdue {
  border-left: 4px solid var(--bs-danger) !important;
  background-color: rgba(220, 53, 69, 0.1);
}

/* Date picker icon color based on theme */
[data-theme="light"] input[type="date"]::-webkit-calendar-picker-indicator {
  filter: invert(0) !important;
}
[data-theme="dark"] input[type="date"]::-webkit-calendar-picker-indicator {
  filter: invert(1) !important;
}